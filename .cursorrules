# etanheyman.com Project Rules

## Styling Patterns

- Use Tailwind CSS v4 for all styling
- Follow the color palette defined in app/globals.css
- Use CSS variables for theme colors (--color-\*)
- Support dark/light mode via CSS variables and media queries
- Use utility classes over custom CSS where possible

## Component Patterns

- Components should be in TypeScript with proper type definitions
- Keep components focused on a single responsibility
- Prefer functional components with hooks over class components
- Use named exports for components

## Naming Conventions

- Component files: PascalCase (e.g., Button.tsx)
- Utility files: camelCase (e.g., formatDate.ts)
- Page components: page.tsx (Next.js App Router convention)
- Layout components: layout.tsx (Next.js App Router convention)

## Code Organization

- Group related components in subdirectories
- Keep page-specific components in their respective page directories
- Shared components go in app/components
- Use index.ts files for clean exports where appropriate

## Animation Guidelines

- Use react-scroll-parallax for parallax effects
- Keep animations subtle and purposeful
- Ensure animations work on both desktop and mobile
- Consider reduced motion preferences for accessibility

## Performance Considerations

- Optimize images for web
- Minimize third-party dependencies
- Use Next.js image optimization
- Consider code splitting for larger components
- Lazy load non-critical components

## Accessibility

- Use semantic HTML elements
- Ensure sufficient color contrast
- Include appropriate ARIA attributes
- Support keyboard navigation
- Test with screen readers

## Responsive Design

- Design for mobile-first
- Use Tailwind's responsive breakpoints
- Test on various screen sizes
- Ensure touch targets are appropriately sized on mobile